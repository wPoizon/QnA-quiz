[
  {
    "Question": "What are some challenges in finding faults in embedded systems (ES)?",
    "Answer": "Faults can hide in many places, be caused by complex chains of events, occur at any stage of the software lifecycle, and detecting faults risks introducing new ones."
  },
  {
    "Question": "What is a critical consideration when eliminating faults in embedded systems?",
    "Answer": "When eliminating faults, it is essential not to introduce new faults into the system."
  },
  {
    "Question": "What are two primary approaches to fault elimination?",
    "Answer": "Static analysis (inspection by humans) and dynamic analysis (testing by execution)."
  },
  {
    "Question": "What is static analysis in fault elimination?",
    "Answer": "Static analysis is an inspection technique where artifacts are examined manually, not by machine, and includes methods like Fagan and phased inspections."
  },
  {
    "Question": "What are Fagan Inspections?",
    "Answer": "A formal software inspection method created by Michael Fagan, aimed at reviewing artifacts to detect faults."
  },
  {
    "Question": "What is dynamic analysis in fault elimination?",
    "Answer": "Dynamic analysis is a testing technique that evaluates artifacts based on the results obtained by executing them."
  },
  {
    "Question": "Why is testing crucial for high-dependability software?",
    "Answer": "Testing is essential regardless of the technology used, as it verifies, debugs, and validates that software meets required standards and certification requirements."
  },
  {
    "Question": "List three primary goals of software testing.",
    "Answer": "1) Verification: checking if outputs are as expected, 2) Debugging: identifying defects when outputs are incorrect, 3) Validation: assessing performance and meeting client requirements."
  },
  {
    "Question": "What model is often referred to in the context of verification and validation (V&V) testing?",
    "Answer": "The V-Model."
  },
  {
    "Question": "What are test adequacy and test coverage in fault elimination?",
    "Answer": "Test adequacy assesses if enough tests have been conducted, while test coverage quantifies the extent of testing needed or completed."
  },
  {
    "Question": "What are the components of test-coverage metrics for test adequacy?",
    "Answer": "Test-coverage metrics include input coverage, boundary analysis, robustness testing, and worst-case testing."
  },
  {
    "Question": "What is boundary analysis in test coverage?",
    "Answer": "Boundary analysis involves choosing input values close to the limits of acceptable ranges to test system behavior at edge cases."
  },
  {
    "Question": "What is robustness testing in test coverage?",
    "Answer": "Robustness testing involves choosing input values outside of normal boundaries to assess how the system handles extreme conditions."
  },
  {
    "Question": "What is worst-case testing (WCT)?",
    "Answer": "WCT involves choosing values for multiple input variables outside their boundaries to test the system's performance in the most extreme scenarios."
  }
]
