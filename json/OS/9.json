[
  {
    "Question": "Why is memory management necessary in operating systems?",
    "Answer": "Memory management is necessary because multiple processes share the main memory, and it ensures efficient allocation and protection of memory resources."
  },
  {
    "Question": "What is the difference between logical and physical addresses?",
    "Answer": "Logical addresses are generated by the CPU and used by programs, while physical addresses refer to locations in memory hardware, mapped by the Memory Management Unit (MMU)."
  },
  {
    "Question": "What are the three types of address binding?",
    "Answer": "Address binding can occur at compile time, load time, or execution time, with execution time being the most flexible for process relocation."
  },
  {
    "Question": "What is contiguous memory allocation, and what are its limitations?",
    "Answer": "Contiguous memory allocation assigns a single continuous block of memory to each process, leading to issues like external fragmentation and limited scalability."
  },
  {
    "Question": "What is the difference between external and internal fragmentation?",
    "Answer": "External fragmentation occurs when available memory is scattered in small non-contiguous blocks, while internal fragmentation arises when allocated memory exceeds the process's requirements."
  },
  {
    "Question": "What is paging, and how does it address fragmentation issues?",
    "Answer": "Paging divides memory into fixed-sized blocks (frames) and processes into pages, allowing non-contiguous memory allocation to eliminate external fragmentation."
  },
  {
    "Question": "What is the purpose of the Translation Lookaside Buffer (TLB)?",
    "Answer": "The TLB is a high-speed cache that stores recent translations of logical to physical addresses to reduce the overhead of page table lookups."
  }
]

