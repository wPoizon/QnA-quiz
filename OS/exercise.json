[
  {
    "Question": "How does the distinction between kernel mode and user mode provide rudimentary protection?",
    "Answer": "Kernel mode allows unrestricted access to hardware and critical operations, while user mode restricts access, preventing malicious or erroneous user programs from harming the system."
  },
  {
    "Question": "What is the purpose of interrupts in an operating system?",
    "Answer": "Interrupts allow the CPU to respond to asynchronous events. Unlike traps, which are synchronous and often generated by programs, interrupts signal external events like I/O completion."
  },
  {
    "Question": "What are the advantages and disadvantages of the layered approach to system design?",
    "Answer": "Advantages include modularity and ease of debugging. Disadvantages include reduced efficiency due to overhead from multiple layers."
  },
  {
    "Question": "Describe three general methods for passing parameters to the operating system.",
    "Answer": "Parameters can be passed via CPU registers, stored in a memory block with its address passed in a register, or pushed onto the stack."
  },
  {
    "Question": "What components of a program state are shared across threads in a multithreaded process?",
    "Answer": "Shared components include heap memory and global variables, while register values and stack memory are unique to each thread."
  },
  {
    "Question": "Is it possible to have concurrency without parallelism?",
    "Answer": "Yes, concurrency allows multiple tasks to make progress, but without parallelism, tasks do not execute simultaneously and rely on context switching."
  },
  {
    "Question": "Explain the difference between preemptive and nonpreemptive scheduling.",
    "Answer": "Preemptive scheduling allows the CPU to be taken from a running process, while nonpreemptive scheduling lets a process run until it voluntarily releases the CPU."
  }
]
